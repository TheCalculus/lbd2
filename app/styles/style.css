html,
body {
    padding: 0;
    margin: 0;
    height: 100vh;
    background: var(--bg-color);
}

* {
    color: var(--text-color);
}

.container {
    display: grid;
    grid-template-columns: 2.1fr 0.5fr;
    grid-template-rows: 2.5fr 0.1fr;
    gap: 0px 0px;
    grid-auto-flow: row;
    grid-template-areas:
        "board-content chat-content"
        "board-info board-info";
    padding: 2rem;
    width: calc(100% - 4rem);
    height: calc(100% - 4rem);
    max-height: calc(100% - 4rem);
}

.container>* {
    min-height: 0;
    min-width: 0;
}

.board-content {
    grid-area: board-content;
    display: grid;
    grid-template-rows: auto;
    overflow-y: scroll;
}

.board-content::-webkit-scrollbar {
    /* 
    width: 3px;
    background: white; 
*/
    display: none;
}

.entry {
    height: 50px;
    display: grid;
    grid-template-columns: 0.4fr 0.5fr 2.1fr 0.5fr;
    grid-auto-flow: row;
    padding: 0 1em;
    transition: background 100ms;
}

.entry svg {
    /* '#' icon */
    margin: 0;
}

.entry>*:last-child {
    /* points */
    text-align: right;
}

.entry:first-child {
    /* #...name...points */
    background: var(--sub-color);
}

.entry:nth-child(even) {
    /* every 2nd entry */
    background: var(--sub-alt-color);
}

.entry:not(:first-child):hover {
    background: var(--caret-color);
}

.chat-content {
    grid-area: chat-content;
    background: var(--sub-alt-color);
    padding: 0 1rem;
    overflow-y: scroll;
}

.chat-content>p>span {
    color: var(--main-color);
}

.board-info {
    grid-area: board-info;
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
}

.entry,
.board-info {
    cursor: pointer;
}

.important {
    /* only uuid / board id stored in this element */
    cursor: text;
}

.board-info>.board_info,
.board-info>.self_info {
    display: flex;
    align-items: center;
    background: var(--sub-alt-color);
    padding: 0.1rem;
    gap: 1rem;
}

svg {
    margin: 0 0.5rem;
    width: 0.8em;
    height: 0.8em;
}

.modal {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: var(--bg-color);
    border: 0.1em solid var(--caret-color);
    padding: 3rem;
}

.modal>form {
    display: flex;
    flex-direction: column;
    justify-content: center;
    margin: 0 auto;
    gap: 1rem;
}

input[type="text"],
input[type="number"] {
    outline: none;
    color: black; /* input is always white */
}

button {
    background: var(--sub-color);
    outline: none;
    border: none;
    padding: 1rem;
    cursor: pointer;
    transition: background 100ms;
}

button:hover {
    background: var(--text-color);
    color: var(--bg-color);
}